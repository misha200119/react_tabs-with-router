{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Navigation/Navigation.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["HomePage","memo","className","NotFoundPage","Navigation","React","to","Tabs","tabs","tabId","useParams","useState","selectedTab","setSelectedtab","isCorrectTab","useMemo","selectedPage","find","tab","id","map","onClick","title","content","initialTabs","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"2OAEaA,EAAmBC,gBAAK,WACnC,OACE,qBAAKC,UAAU,WAAf,SACE,oBAAIA,UAAU,kBAAd,8BCHOC,EAAuBF,gBAAK,WACvC,OACE,qBAAKC,UAAU,WAAf,SACE,oBAAIA,UAAU,kBAAd,mCCFOE,G,MAA0BC,IAAMJ,MAAK,WAChD,OACE,qBAAKC,UAAU,aAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,qBAAIA,UAAU,sCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASI,GAAG,QAAQJ,UAAU,WAA9B,oBAKF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASI,GAAG,QAAQJ,UAAU,WAA9B,+BCGCK,EAAkBN,gBAAK,YAAe,IAAZO,EAAW,EAAXA,KAC7BC,EAAUC,cAAVD,MAER,EAAsCE,mBAAqB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAeC,mBAAQ,WAC3B,IAAMC,EAAeR,EAAKS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOV,KAEjD,QAAIO,IACFH,EAAeG,IAER,KAIR,CAACP,EAAOG,IAEX,OACE,sBAAKV,UAAU,OAAf,WACIY,GACA,oDAIF,oBAAIZ,UAAU,eAAd,SACGM,EAAKY,KAAI,SAAAF,GAAG,OACX,oBAAIhB,UAAU,WAAd,SACE,cAAC,IAAD,CACEI,GAAIY,EAAIC,GACRjB,UAAU,WACVmB,QAAS,WACPR,EAAeK,IAJnB,SAOGA,EAAII,SARqBJ,EAAIC,SAcpCL,GACE,mBAAGZ,UAAU,oBAAb,gBACGU,QADH,IACGA,OADH,EACGA,EAAaW,gBClCpBC,EAAc,CAClB,CAAEL,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAuB3BE,EApBW,WACxB,MAAed,mBAASa,GAAjBhB,EAAP,oBAEA,OACE,sBAAKN,UAAU,MAAf,UACE,cAACE,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsB,KAAK,QAAQC,QAAS,cAAC3B,EAAD,MAE7B,cAAC,IAAD,CAAO0B,KAAK,UAAUC,QAAS,cAACpB,EAAD,CAAMC,KAAMA,IAA3C,SACE,cAAC,IAAD,CAAOkB,KAAK,SAASC,QAAS,cAACpB,EAAD,CAAMC,KAAMA,QAG5C,cAAC,IAAD,CAAOkB,KAAK,IAAIC,QAAS,cAACxB,EAAD,aC1CjCyB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d42d1a4a.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\nexport const HomePage: FC<{}> = memo(() => {\n  return (\n    <div className=\"HomePage\">\n      <h1 className=\"HomePage__title\">\n        HOME___PAGE\n      </h1>\n    </div>\n  );\n});\n","import { FC, memo } from 'react';\n\nexport const NotFoundPage: FC<{}> = memo(() => {\n  return (\n    <div className=\"HomePage\">\n      <h1 className=\"HomePage__title\">\n        NOT__FOUND__PAGE\n      </h1>\n    </div>\n  );\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation:React.FC<{}> = React.memo(() => {\n  return (\n    <div className=\"Navigation\">\n      <nav className=\"Navigation__nav\">\n        <ul className=\"nav nav-tabs justify-content-center\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/home\" className=\"nav-link\">\n              Home\n            </NavLink>\n          </li>\n\n          <li className=\"nav-item\">\n            <NavLink to=\"/tabs\" className=\"nav-link\">\n              Tabs\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n});\n","import {\n  FC,\n  memo,\n  useMemo,\n  useState,\n} from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\n\ntype Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ninterface Props {\n  tabs: Array<Tab>;\n}\n\nexport const Tabs: FC<Props> = memo(({ tabs }) => {\n  const { tabId } = useParams<{ tabId: string }>();\n\n  const [selectedTab, setSelectedtab] = useState<Tab | null>(null);\n\n  const isCorrectTab = useMemo(() => {\n    const selectedPage = tabs.find(tab => tab.id === tabId);\n\n    if (selectedPage) {\n      setSelectedtab(selectedPage);\n\n      return true;\n    }\n\n    return false;\n  }, [tabId, selectedTab]);\n\n  return (\n    <div className=\"Tabs\">\n      {!isCorrectTab && (\n        <p>\n          Please select a tab\n        </p>\n      )}\n      <ul className=\"nav nav-tabs\">\n        {tabs.map(tab => (\n          <li className=\"nav-item\" key={tab.id}>\n            <NavLink\n              to={tab.id}\n              className=\"nav-link\"\n              onClick={() => {\n                setSelectedtab(tab);\n              }}\n            >\n              {tab.title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n      {\n        isCorrectTab && (\n          <p className=\"Tabs__tab-content\">\n            {selectedTab?.content}\n          </p>\n        )\n      }\n    </div>\n  );\n});\n","import { useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navigation } from './components/Navigation';\nimport { Tabs } from './components/Tabs';\n\n// import { RouteComponentProps } from 'react-router-dom';\n\n/*\ntype TabsPageProps = React.FC<RouteComponentProps<{ tabId: string }>>;\nconst TabsPage: TabsPageProps = ({ match }) => {...};\n\nor\n\nimport { useParams } from 'react-router-dom';\n\nconst TabsPage = () => {\n  const { tabId } = useParams<{ tabId: string }>();\n  ...\n};\n*/\n\nconst initialTabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC<{}> = () => {\n  const [tabs] = useState(initialTabs);\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n\n      <Routes>\n        <Route path=\"/home\" element={<HomePage />} />\n\n        <Route path=\"/tabs/*\" element={<Tabs tabs={tabs} />}>\n          <Route path=\":tabId\" element={<Tabs tabs={tabs} />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}